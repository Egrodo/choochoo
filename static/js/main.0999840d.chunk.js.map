{"version":3,"sources":["css/reusables/TrainStatus.module.css","css/blocks/TrainBlock.module.css","css/reusables/Input.module.css","css/reusables/Typeahead.module.css","css/reusables/Option.module.css","css/blocks/WeatherBlock.module.css","css/views/WelcomeView.module.css","css/views/MainView.module.css","css/views/SettingsView.module.css","css/App.module.css","css/reusables/Button.module.css","css/reusables/NetworkDialogue.module.css","css/reusables/TrainTracks.module.css","assets/images/sunny-day.png","css/reusables/Spinner.module.css","assets/images/whiteTrain.png","assets/images/emailIcon.svg","assets/images/cloudIcon.svg","assets/images/trainIcons lazy /^/.*/.svg$/ groupOptions: {} namespace object","components/reusables/NetworkDialogue.js","components/reusables/Input.js","components/reusables/Typeahead.js","components/reusables/useDebounce.js","components/reusables/Option.js","components/reusables/Button.js","components/data/lineMap.js","components/views/WelcomeView.js","components/reusables/Spinner.js","components/blocks/WeatherBlock.js","components/reusables/TrainTracks.js","components/reusables/TrainStatus.js","components/blocks/TrainBlock.js","components/views/MainView.js","components/views/SettingsView.js","components/App.js","index.js"],"names":["module","exports","TrainStatus","timeContainer","arrivalTime","loading","TrainBlock","headlineContainer","direction","N","S","darken","statusContainer","floatLoader","InputContainer","Input","fluid","label","error","inputContainer","bottomBorder","dropDownContainer","hidden","listContainer","dropDownItem","selectContainer","select","disabled","WeatherBlock","temperatureContainer","temperature","desc","WelcomeView","mainHeader","secondaryHeader","inputsContainer","btnContainer","MainView","weatherContainer","trainContainer","settingsLink","SettingsView","saveContainer","App","imgContainer","headerImg","Button","iconContainer","icon","text","NetworkDialogue","active","blink","TrainTracks","TrainImg","__webpack_require__","p","Spinner","map","./1.svg","./2.svg","./3.svg","./4.svg","./5.svg","./5x.svg","./6.svg","./7.svg","./7x.svg","./a.svg","./b.svg","./c.svg","./d.svg","./e.svg","./f.svg","./g.svg","./gs.svg","./h.svg","./j.svg","./l.svg","./m.svg","./n.svg","./q.svg","./r.svg","./s.svg","./si.svg","./t.svg","./w.svg","./z.svg","webpackAsyncContext","req","ids","e","then","id","t","Promise","resolve","Error","code","keys","Object","_ref","message","react_default","a","createElement","className","concat","CSS","defaultProps","props","htmlFor","alt","assign","name","classes","Typeahead","getData","stationObj","setStationObj","_useState","useState","stop_name","_useState2","slicedToArray","stationName","setStationName","_useState3","_useState4","options","setOptions","_useState5","_useState6","optionsView","enableOptionsView","debouncedQuery","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","onOptionClick","_ref2","target","RangeError","reusables_Input","placeholder","onChange","length","onFocus","onBlur","currInp","toLowerCase","trim","i","input","item","key","onClick","Option","trains","setTrains","newTrains","data","forEach","trainStr","lineMap","charAt","line","selected","objectWithoutProperties","type","src","children","1","2","3","4","5","6","7","9","A","C","E","H","Q","R","W","F","M","D","B","G","J","Z","L","saveChanges","networkError","setName","lines","setLines","_useState7","_useState8","setLine","_useState9","_useState10","errorObj","setErrorObj","stop_id","reusables_Typeahead","fetch","process","json","catch","err","maxLength","reusables_Option","selection","reusables_Button","errors","ReferenceError","lat","lon","temp","setTemp","setDesc","setLoading","getWeather","res","Math","round","summary","console","count","Fragment","loader","reusables_Spinner","descContainer","eta","margin","setMargin","maxDist","setMaxDist","onLoad","max","parentNode","offsetWidth","style","left","status","img","setImg","timeLeft","setTimeLeft","getImg","image","default","routeId","timer","window","setInterval","currTimeLeft","clearInterval","min","routeImg","trainTracksContainer","reusables_TrainTracks","setDirection","schedule","setSchedule","getSchedule","log","ok","localStorage","getItem","reload","load","dir","newDir","setItem","role","tabIndex","reusables_TrainStatus","gotoSettings","greeting","setGreeting","currT","Date","getHours","calcGreeting","blocks_WeatherBlock","stop_lat","stop_lon","blocks_TrainBlock","initData","ind","indexOf","href","rel","mailIcon","cloudIcon","view","setView","networkIssue","setNetworkIssue","msg","retry","cb","_len2","arguments","params","Array","_key2","networkRetry","tries","_len","_key","navigator","onLine","apply","newName","newStationObj","newLine","JSON","stringify","checkStorage","parse","SunAndClouds","content","reusables_NetworkDialogue","views_WelcomeView","views_MainView","views_SettingsView","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0999840d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrainStatus\":\"TrainStatus_TrainStatus__2wwYR\",\"timeContainer\":\"TrainStatus_timeContainer__2KcoO\",\"arrivalTime\":\"TrainStatus_arrivalTime__34oCB\",\"loading\":\"TrainStatus_loading__cLNuX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrainBlock\":\"TrainBlock_TrainBlock__3i6q8\",\"headlineContainer\":\"TrainBlock_headlineContainer__oab_h\",\"direction\":\"TrainBlock_direction__3Dtt4\",\"N\":\"TrainBlock_N__1evkk\",\"S\":\"TrainBlock_S__1TwUx\",\"darken\":\"TrainBlock_darken__3rLPj\",\"statusContainer\":\"TrainBlock_statusContainer__25Ahv\",\"floatLoader\":\"TrainBlock_floatLoader__2yLHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputContainer\":\"Input_InputContainer__1HSNR\",\"Input\":\"Input_Input__8-SE7\",\"fluid\":\"Input_fluid__1N9y5\",\"label\":\"Input_label__1tRNF\",\"error\":\"Input_error__2umM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Typeahead_inputContainer__10MDk\",\"bottomBorder\":\"Typeahead_bottomBorder__2dIcY\",\"dropDownContainer\":\"Typeahead_dropDownContainer__1aecB\",\"hidden\":\"Typeahead_hidden__13dV5\",\"listContainer\":\"Typeahead_listContainer__3R5mL\",\"dropDownItem\":\"Typeahead_dropDownItem__3tIv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectContainer\":\"Option_selectContainer__12sGN\",\"select\":\"Option_select__3_ZpF\",\"label\":\"Option_label__1k3Ha\",\"error\":\"Option_error__9zY7D\",\"disabled\":\"Option_disabled__2TUeo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherBlock\":\"WeatherBlock_WeatherBlock__3Ac1r\",\"temperatureContainer\":\"WeatherBlock_temperatureContainer__1TLgj\",\"temperature\":\"WeatherBlock_temperature__1Irai\",\"desc\":\"WeatherBlock_desc__30aa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WelcomeView\":\"WelcomeView_WelcomeView__26BU-\",\"mainHeader\":\"WelcomeView_mainHeader__1akez\",\"secondaryHeader\":\"WelcomeView_secondaryHeader__3wmNJ\",\"inputsContainer\":\"WelcomeView_inputsContainer__j4eY3\",\"btnContainer\":\"WelcomeView_btnContainer__2MkH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainView\":\"MainView_MainView__nzFrf\",\"mainHeader\":\"MainView_mainHeader__2WW32\",\"weatherContainer\":\"MainView_weatherContainer__1-oIF\",\"trainContainer\":\"MainView_trainContainer__1LZpw\",\"settingsLink\":\"MainView_settingsLink__3QQn8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SettingsView\":\"SettingsView_SettingsView__Dkkp-\",\"mainHeader\":\"SettingsView_mainHeader__3yDai\",\"inputsContainer\":\"SettingsView_inputsContainer__3ZEji\",\"btnContainer\":\"SettingsView_btnContainer__3pOZS\",\"saveContainer\":\"SettingsView_saveContainer__1atYY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3-2JL\",\"imgContainer\":\"App_imgContainer__3t918\",\"headerImg\":\"App_headerImg__3eAUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1la9i\",\"iconContainer\":\"Button_iconContainer__2dk5q\",\"icon\":\"Button_icon__2Pbxj\",\"text\":\"Button_text__3Gbvj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NetworkDialogue\":\"NetworkDialogue_NetworkDialogue__kfD56\",\"active\":\"NetworkDialogue_active__2Qxn3\",\"blink\":\"NetworkDialogue_blink__1hBGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrainTracks\":\"TrainTracks_TrainTracks__2D1xp\",\"TrainImg\":\"TrainTracks_TrainImg__3bhim\"};","module.exports = __webpack_public_path__ + \"static/media/sunny-day.275bbde9.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__pUK9B\"};","module.exports = __webpack_public_path__ + \"static/media/whiteTrain.390291fc.png\";","module.exports = __webpack_public_path__ + \"static/media/emailIcon.ac575565.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudIcon.7fccc231.svg\";","var map = {\n\t\"./1.svg\": [\n\t\t46,\n\t\t1\n\t],\n\t\"./2.svg\": [\n\t\t47,\n\t\t2\n\t],\n\t\"./3.svg\": [\n\t\t48,\n\t\t3\n\t],\n\t\"./4.svg\": [\n\t\t49,\n\t\t4\n\t],\n\t\"./5.svg\": [\n\t\t50,\n\t\t5\n\t],\n\t\"./5x.svg\": [\n\t\t51,\n\t\t6\n\t],\n\t\"./6.svg\": [\n\t\t52,\n\t\t7\n\t],\n\t\"./7.svg\": [\n\t\t53,\n\t\t8\n\t],\n\t\"./7x.svg\": [\n\t\t54,\n\t\t9\n\t],\n\t\"./a.svg\": [\n\t\t55,\n\t\t10\n\t],\n\t\"./b.svg\": [\n\t\t56,\n\t\t11\n\t],\n\t\"./c.svg\": [\n\t\t57,\n\t\t12\n\t],\n\t\"./d.svg\": [\n\t\t58,\n\t\t13\n\t],\n\t\"./e.svg\": [\n\t\t59,\n\t\t14\n\t],\n\t\"./f.svg\": [\n\t\t60,\n\t\t15\n\t],\n\t\"./g.svg\": [\n\t\t61,\n\t\t16\n\t],\n\t\"./gs.svg\": [\n\t\t62,\n\t\t17\n\t],\n\t\"./h.svg\": [\n\t\t63,\n\t\t18\n\t],\n\t\"./j.svg\": [\n\t\t64,\n\t\t19\n\t],\n\t\"./l.svg\": [\n\t\t65,\n\t\t20\n\t],\n\t\"./m.svg\": [\n\t\t66,\n\t\t21\n\t],\n\t\"./n.svg\": [\n\t\t67,\n\t\t22\n\t],\n\t\"./q.svg\": [\n\t\t68,\n\t\t23\n\t],\n\t\"./r.svg\": [\n\t\t69,\n\t\t24\n\t],\n\t\"./s.svg\": [\n\t\t70,\n\t\t25\n\t],\n\t\"./si.svg\": [\n\t\t71,\n\t\t26\n\t],\n\t\"./t.svg\": [\n\t\t72,\n\t\t27\n\t],\n\t\"./w.svg\": [\n\t\t73,\n\t\t28\n\t],\n\t\"./z.svg\": [\n\t\t74,\n\t\t29\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 41;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CSS from '../../css/reusables/NetworkDialogue.module.css';\r\n\r\nfunction NetworkDialogue({ message }) {\r\n  return (\r\n    <section className={`${CSS.NetworkDialogue} ${message && CSS.active}`}>\r\n      {message}\r\n      <span>.</span><span>.</span><span>.</span>\r\n    </section>\r\n  );\r\n}\r\n\r\nNetworkDialogue.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nNetworkDialogue.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nexport default NetworkDialogue;\r\n","import React from 'react';\r\nimport CSS from '../../css/reusables/Input.module.css';\r\n\r\nfunction Input(props) {\r\n  return (\r\n    <div className={CSS.InputContainer}>\r\n      {props.label && (\r\n        <label htmlFor={props.alt} className={CSS.label}>\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <input\r\n        {...props}\r\n        name={props.alt}\r\n        className={`\r\n          ${CSS.Input}\r\n          ${props.classes ? props.classes : ''}\r\n          ${props.fluid ? CSS.fluid : ''}\r\n          ${props.error && CSS.error}\r\n        `}\r\n      />\r\n      {props.error && (\r\n        <label htmlFor={props.alt} className={`${CSS.label} ${CSS.error}`}>\r\n          {props.error}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CSS from '../../css/reusables/Typeahead.module.css';\r\nimport useDebounce from './useDebounce';\r\nimport Input from './Input';\r\n\r\nfunction Typeahead({ error, getData, stationObj, setStationObj }) {\r\n  const [stationName, setStationName] = useState(stationObj.stop_name || '');\r\n  const [options, setOptions] = useState([]);\r\n  const [optionsView, enableOptionsView] = useState(false);\r\n\r\n  const debouncedQuery = useDebounce(stationName, 500);\r\n\r\n  const onOptionClick = ({ target: { id } }) => {\r\n    if (!options[id]) throw new RangeError('Invalid id passed to onOptionClick');\r\n    // If one is selected send it upwards for validation and disable option view.\r\n    enableOptionsView(false);\r\n    setStationObj(options[id]);\r\n    setStationName(options[id].stop_name);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      // If successfully debounced get data.\r\n      if (debouncedQuery && optionsView) getData(stationName, setOptions, enableOptionsView);\r\n    },\r\n    [debouncedQuery]\r\n  );\r\n\r\n  return (\r\n    <form>\r\n      <div className={CSS.inputContainer}>\r\n        <Input\r\n          placeholder=\"Station...\"\r\n          value={stationName}\r\n          onChange={e => {\r\n            setStationName(e.target.value);\r\n            enableOptionsView(true);\r\n            if (!e.target.value && options.length) setOptions([]);\r\n          }}\r\n          onFocus={() => {\r\n            if (options.length > 1) enableOptionsView(true);\r\n          }}\r\n          onBlur={() => {\r\n            // Adding a bit of a delay here in case the blur was to click an option.\r\n            setTimeout(() => {\r\n              if (optionsView) enableOptionsView(false);\r\n              if (!stationObj.stop_name || stationName !== stationObj.stop_name) {\r\n                // On blur, if there is no station selected, try to match the typed str with an option.\r\n                const currInp = stationName.toLowerCase().trim();\r\n                for (let i = 0; i < options.length; ++i) {\r\n                  if (currInp === options[i].stop_name.toLowerCase()) {\r\n                    setStationObj(options[i]);\r\n                    setStationName(options[i].stop_name);\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            }, 200);\r\n          }}\r\n          alt=\"station\"\r\n          label=\"Station Name\"\r\n          classes={CSS.input}\r\n          fluid={1}\r\n          error={error}\r\n        />\r\n      </div>\r\n      <div className={`${CSS.dropDownContainer} ${!optionsView && CSS.hidden}`}>\r\n        <ul className={CSS.listContainer}>\r\n          {options.map((item, i) => (\r\n            <li key={item.stop_name} id={i} className={CSS.dropDownItem} onClick={onOptionClick}>\r\n              {item.stop_name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nTypeahead.propTypes = {\r\n  error: PropTypes.string,\r\n  getData: PropTypes.func,\r\n  stationObj: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])),\r\n  setStationObj: PropTypes.func\r\n};\r\n\r\nTypeahead.defaultProps = {\r\n  error: '',\r\n  getData: () => {\r\n    throw new Error('getData not passed to Typeahead');\r\n  },\r\n  stationObj: {},\r\n  setStationObj: () => {\r\n    throw new Error('setStation not passed to Typeahead');\r\n  }\r\n};\r\n\r\nexport default Typeahead;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay.\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Cancel the timeout if the value changes before the delay, or if unmounted.\r\n      return () => clearTimeout(handler);\r\n    },\r\n    [value, delay]\r\n  );\r\n  return debouncedValue;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CSS from '../../css/reusables/Option.module.css';\r\n\r\nfunction Option(props) {\r\n  // Display various line types and let the user select one. If there's only one, select it and disable field.\r\n  const [trains, setTrains] = useState();\r\n\r\n  useEffect(\r\n    () => {\r\n      // On render and update display the appropriate trains.\r\n      const newTrains = {};\r\n      props.data.forEach(item => {\r\n        let trainStr = '';\r\n        props.lineMap[item.charAt(0)].forEach((line, i) => {\r\n          trainStr += `${line}`;\r\n          if (props.lineMap[item.charAt(0)].length - 1 !== i) trainStr += ', ';\r\n        });\r\n        newTrains[item] = trainStr;\r\n      });\r\n      setTrains(newTrains);\r\n    },\r\n    [props.data]\r\n  );\r\n\r\n  return (\r\n    <div className={CSS.selectContainer}>\r\n      {props.label && (\r\n        <label htmlFor={props.alt} className={CSS.label}>\r\n          {props.label}\r\n        </label>\r\n      )}\r\n      <select\r\n        className={`${CSS.select} ${props.data.length < 2 && CSS.disabled}`}\r\n        onChange={props.onChange}\r\n        disabled={props.data.length < 2}\r\n        value={props.selected}\r\n      >\r\n        {props.data.map((item, i) => (\r\n          <option value={i} key={item}>\r\n            {`${trains[item]} Trains`}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {props.error && (\r\n        <label htmlFor={props.alt} className={`${CSS.label} ${CSS.error}`}>\r\n          {props.error}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.string),\r\n  selected: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  lineMap: PropTypes.objectOf(PropTypes.arrayOf(PropTypes.string)),\r\n  error: PropTypes.string,\r\n  label: PropTypes.string,\r\n  alt: PropTypes.string\r\n};\r\n\r\nOption.defaultProps = {\r\n  data: [],\r\n  selected: 0,\r\n  onChange: () => {\r\n    throw new Error('onChange not passed to Typeahead');\r\n  },\r\n  lineMap: {},\r\n  error: '',\r\n  label: '',\r\n  alt: ''\r\n};\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport CSS from '../../css/reusables/Button.module.css';\r\n\r\nfunction Button({ icon, ...props }) {\r\n  // If icon, display icon ahead of btn.\r\n  return (\r\n    <button className={`${CSS.Button} ${icon && CSS.iconContainer}`} type=\"button\" {...props}>\r\n      {icon && <img src={icon} className={CSS.icon} alt=\"Icon\" />}\r\n      <span className={CSS.text}>{props.children}</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","export default {\n  '1': ['1', '2', '3'],\n  '2': ['2', '3'],\n  '3': ['2', '3'],\n  '4': ['4', '5', '6'],\n  '5': ['4', '5', '6'],\n  '6': ['4', '5', '6'],\n  '7': ['7'],\n  '9': ['GS Shuttle'],\n  S: ['S', 'SIR'],\n  A: ['A', 'C', 'E', 'H'],\n  C: ['A', 'C', 'E', 'H'],\n  E: ['A', 'C', 'E', 'H'],\n  H: ['A', 'C', 'E', 'H'],\n  Q: ['N', 'R', 'W', 'Q'],\n  N: ['N', 'R', 'W', 'Q'],\n  R: ['N', 'R', 'W', 'Q'],\n  W: ['N', 'R', 'W', 'Q'],\n  F: ['B', 'D', 'F', 'M'],\n  M: ['B', 'D', 'F', 'M'],\n  D: ['B', 'D', 'F', 'M'],\n  B: ['B', 'D', 'F', 'M'],\n  G: ['G'],\n  J: ['J', 'Z'],\n  Z: ['J', 'Z'],\n  L: ['L']\n};\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typeahead from '../reusables/Typeahead';\r\nimport CSS from '../../css/views/WelcomeView.module.css';\r\nimport Option from '../reusables/Option';\r\nimport Input from '../reusables/Input';\r\nimport Button from '../reusables/Button';\r\nimport lineMap from '../data/lineMap';\r\n\r\nfunction WelcomeView({ saveChanges, networkError }) {\r\n  // The station should contain all the data for the station, not just the name.\r\n  const [name, setName] = useState('');\r\n  const [stationObj, setStationObj] = useState({});\r\n  const [lines, setLines] = useState([]); // List of lines potential line\r\n  const [line, setLine] = useState(''); // Selected line\r\n\r\n  // Error handling: empty strings means no error, otherwise display error.\r\n  const [errorObj, setErrorObj] = useState({\r\n    name: '',\r\n    stationObj: '',\r\n    line: ''\r\n  });\r\n\r\n  const submit = () => {\r\n    // On submit, ensure the fields are valid then saveChanges.\r\n    const errors = {};\r\n\r\n    // First check that they filled in all the areas.\r\n    if (!Object.keys(stationObj).length) errors.stationObj = 'Missing station name';\r\n    if (name.length > 16) errors.name = 'First name too long';\r\n    if (!name.trim()) errors.name = 'Missing name';\r\n    if (!line) errors.line = 'Missing line';\r\n\r\n    setErrorObj(errors);\r\n    if (!Object.keys(errors).length) {\r\n      // If there are no errors, save the changes.\r\n      saveChanges(name, stationObj, line);\r\n    }\r\n  };\r\n\r\n  const getData = (stationName, setOptions, enableOptionsView) => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/search/stops/?query=${stationName}`)\r\n      .then(data => data.json())\r\n      .then(json => {\r\n        if (json.error) throw new Error(json.error);\r\n        // Once I've retrieved data, store it and enable options view.\r\n        setOptions(json);\r\n        enableOptionsView(true);\r\n      })\r\n      .catch(err => {\r\n        if (err.message === 'Rate Limit Reached') {\r\n          networkError('Rate Limit Reached', false);\r\n        } else networkError('/searchStops req failed', true, getData, stationName, setOptions, enableOptionsView);\r\n      });\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      // Every time the station changes generate a list of stop_id's it has, which will re-render Option.\r\n      setLines(stationObj.stop_id);\r\n\r\n      // Also default to the first option.\r\n      if (stationObj.stop_id) setLine(stationObj.stop_id[0]);\r\n    },\r\n    [stationObj]\r\n  );\r\n\r\n  return (\r\n    <section className={CSS.WelcomeView}>\r\n      <h1 className={CSS.mainHeader}>Welcome to choochoo</h1>\r\n      <h4 className={CSS.secondaryHeader}>I'll need some information before we start</h4>\r\n      <div className={CSS.inputsContainer}>\r\n        <Typeahead\r\n          error={errorObj.stationObj ? errorObj.stationObj : ''}\r\n          getData={getData}\r\n          stationObj={stationObj}\r\n          setStationObj={setStationObj}\r\n        />\r\n        <Input\r\n          onChange={e => setName(e.target.value)}\r\n          value={name}\r\n          maxLength=\"16\"\r\n          placeholder=\"Name...\"\r\n          alt=\"name\"\r\n          label=\"First Name\"\r\n          error={errorObj.name ? errorObj.name : ''}\r\n          fluid={1}\r\n        />\r\n        <Option\r\n          data={lines}\r\n          selection={line}\r\n          onChange={e => setLine(lines[e.target.value])}\r\n          error={errorObj.line ? errorObj.line : ''}\r\n          lineMap={lineMap}\r\n          label=\"Subway Line\"\r\n          alt=\"Subway Line\"\r\n        />\r\n      </div>\r\n\r\n      <div className={CSS.btnContainer}>\r\n        <Button onClick={submit}>Get Started</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nWelcomeView.propTypes = {\r\n  saveChanges: PropTypes.func,\r\n  networkError: PropTypes.func\r\n};\r\n\r\nWelcomeView.defaultProps = {\r\n  saveChanges: () => {\r\n    throw new ReferenceError('saveChanges not passed to MainView');\r\n  },\r\n  networkError: () => {\r\n    throw new ReferenceError('networkError not passed to MainView');\r\n  }\r\n};\r\n\r\nexport default WelcomeView;\r\n","import React from 'react';\r\nimport CSS from '../../css/reusables/Spinner.module.css';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className={CSS.Spinner}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../reusables/Spinner';\r\n\r\nimport CSS from '../../css/blocks/WeatherBlock.module.css';\r\n\r\nfunction WeatherBlock({ lat, lon, networkError }) {\r\n  const [temp, setTemp] = useState('00');\r\n  const [desc, setDesc] = useState('Loading');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getWeather = () => {\r\n    setLoading(true);\r\n    fetch(`${process.env.REACT_APP_API_URL}/api/weather/${lat}/${lon}`)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if (json.error) throw new Error(json.error);\r\n        setTemp(Math.round(json.temperature));\r\n        setDesc(json.summary);\r\n      })\r\n      .catch(err => {\r\n        console.count('Throwing error from weatherBlock');\r\n        if (err.message === 'Rate Limit Reached') {\r\n          networkError('Rate Limit Reached', false);\r\n        } else networkError('/api/weather req failed', true, getWeather);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // On first render get the weather.\r\n    getWeather();\r\n  }, []);\r\n\r\n  useEffect(\r\n    () => {\r\n      // When the temp and desc are loaded disable spinner.\r\n      if (temp !== '00' && desc !== 'Loading') {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [temp, desc]\r\n  );\r\n\r\n  return (\r\n    <section className={CSS.WeatherBlock}>\r\n      {loading ? (\r\n        <>\r\n          <div className={CSS.loader}>\r\n            <Spinner />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className={CSS.temperatureContainer}>\r\n            <span className={CSS.temperature}>{temp}</span>\r\n          </div>\r\n          <div className={CSS.descContainer}>\r\n            <span className={CSS.desc}>{desc}</span>\r\n          </div>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nWeatherBlock.propTypes = {\r\n  lat: PropTypes.string,\r\n  lon: PropTypes.string,\r\n  networkError: PropTypes.func\r\n};\r\n\r\nWeatherBlock.defaultProps = {\r\n  lat: '40.7831',\r\n  lon: '73.9712',\r\n  networkError: () => {\r\n    throw new ReferenceError('networkError not passed to WeatherBlock');\r\n  }\r\n};\r\n\r\nexport default WeatherBlock;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TrainImg from '../../assets/images/whiteTrain.png';\r\nimport CSS from '../../css/reusables/TrainTracks.module.css';\r\n\r\nfunction TrainTracks({ eta }) {\r\n  const [margin, setMargin] = useState(0);\r\n  const [maxDist, setMaxDist] = useState(0);\r\n\r\n  useEffect(\r\n    () => {\r\n      // On first mount and on update of eta / maxDist\r\n\r\n      // If eta is greater than 5 minutes, just keep train on the left.\r\n      if (eta > 600) {\r\n        setMargin(0);\r\n      } else {\r\n        // Otherwise calculate our percentage to 5 minutes,\r\n        const m = 1 - eta / 600;\r\n        // and convert it to a pixel count of maxDist\r\n        const t = m * maxDist;\r\n        // So long as t isn't greater than maxDist minus a 20px~ fuzz, set it. Otherwise keep it at max.\r\n        if (t < maxDist) {\r\n          setMargin(t);\r\n        } else if (t !== maxDist) setMargin(maxDist);\r\n      }\r\n    },\r\n    [maxDist, eta]\r\n  );\r\n\r\n  // I get new props every 10 seconds updating the time & position.\r\n  return (\r\n    <section className={CSS.TrainTracks}>\r\n      <img\r\n        src={TrainImg}\r\n        onLoad={({ target }) => {\r\n          // When the image loads, set the maximum distance to be 100% of the container width minus the dist of the image width.\r\n          const max = target.parentNode.offsetWidth - target.offsetWidth;\r\n          setMaxDist(max);\r\n        }}\r\n        alt=\"Train\"\r\n        className={CSS.TrainImg}\r\n        style={{ left: margin }}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nTrainTracks.propTypes = {\r\n  eta: PropTypes.number\r\n};\r\n\r\nTrainTracks.defaultProps = {\r\n  eta: 600000\r\n};\r\n\r\nexport default TrainTracks;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TrainTracks from './TrainTracks';\r\nimport CSS from '../../css/reusables/TrainStatus.module.css';\r\n\r\nfunction TrainStatus({ status, loading }) {\r\n  const [img, setImg] = useState('');\r\n  const [timeLeft, setTimeLeft] = useState(status.eta);\r\n\r\n  const getImg = id => {\r\n    import(`../../assets/images/trainIcons/${id}.svg`)\r\n      .then(image => {\r\n        setImg(image.default);\r\n      })\r\n      .catch(err => {\r\n        // We don't need network error handling here because this won't load if there's one higher up.\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If this TrainStatus is in loading mode don't do anything here.\r\n    if (loading) return;\r\n\r\n    getImg(status.routeId.toLowerCase());\r\n\r\n    // Every 10 seconds update the timeLeft state which will update the eta and trainPath.\r\n    const timer = window.setInterval(() => {\r\n      setTimeLeft(currTimeLeft => (currTimeLeft - 10 > 0 ? currTimeLeft - 10 : 0));\r\n    }, 10 * 1000);\r\n    return () => window.clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(\r\n    () => {\r\n      // On change of 'status' (direction change) recalc everything.\r\n      if (loading) return;\r\n      getImg(status.routeId.toLowerCase());\r\n      setTimeLeft(status.eta);\r\n    },\r\n    [status]\r\n  );\r\n\r\n  return (\r\n    <section className={`${CSS.TrainStatus} ${loading && CSS.loading}`}>\r\n      {!loading && (\r\n        <>\r\n          <div className={CSS.timeContainer}>\r\n            <span className={CSS.arrivalTime}>{Math.round(timeLeft / 60) < 1 ? '<1' : Math.round(timeLeft / 60)}</span>\r\n            <span className={CSS.min}>min</span>\r\n          </div>\r\n          <div className={CSS.routeId}>\r\n            <img className={CSS.routeImg} alt={status.routeId} src={img} />\r\n          </div>\r\n          <div className={CSS.trainTracksContainer}>\r\n            <TrainTracks eta={timeLeft} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nTrainStatus.propTypes = {\r\n  status: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\r\n  loading: PropTypes.bool\r\n};\r\n\r\nTrainStatus.defaultProps = {\r\n  status: {},\r\n  loading: false\r\n};\r\n\r\nexport default TrainStatus;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TrainStatus from '../reusables/TrainStatus';\r\nimport Spinner from '../reusables/Spinner';\r\nimport CSS from '../../css/blocks/TrainBlock.module.css';\r\n\r\nfunction TrainBlock({ stationObj, line, networkError }) {\r\n  const [direction, setDirection] = useState('N');\r\n  const [schedule, setSchedule] = useState({ N: [], S: [] }); // Obj containing incoming trains for both directions.\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getSchedule = () => {\r\n    // If we're already loading or something is broken, don't retry.\r\n    if (loading) return;\r\n    console.log(`Getting new schedule for line ${line}`);\r\n    setLoading(true);\r\n\r\n    fetch(`${process.env.REACT_APP_API_URL}/api/schedule/${line}`)\r\n      .then(res => {\r\n        if (!res.ok) throw res;\r\n        return res.json();\r\n      })\r\n      .then(json => {\r\n        if (json.error) throw new Error(json.error);\r\n        setSchedule(json);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        // If the server sends me a permanent error, don't retry.\r\n        if (err.status === 500 || err.status === 503) {\r\n          networkError(`500 on /api/schedule/${line}`, true, getSchedule);\r\n        } else {\r\n          console.error(err);\r\n        }\r\n      });\r\n  };\r\n\r\n  const switchDirection = () => {\r\n    // On clicking of direction toggle rendered direction and save to localStorage.\r\n    setDirection(dir => {\r\n      const newDir = dir === 'N' ? 'S' : 'N';\r\n      localStorage.setItem('direction', newDir);\r\n      return newDir;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // On first mount, get schedule and check for direction.\r\n    if (localStorage.getItem('direction')) setDirection(localStorage.getItem('direction'));\r\n\r\n    getSchedule();\r\n\r\n    // Get fresh data every 60 seconds if not in error / loading state.\r\n    const reload = window.setInterval(() => {\r\n      // Workaround to get accurate state data inside the setInterval.\r\n      setLoading(load => {\r\n        if (!load) {\r\n          getSchedule();\r\n        }\r\n        return load;\r\n      });\r\n    }, 60 * 1000);\r\n    return () => {\r\n      window.clearInterval(reload);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className={CSS.TrainBlock}>\r\n      <div className={CSS.headlineContainer}>\r\n        <span className={CSS.stationName}>{stationObj.stop_name}</span>\r\n        <span onClick={switchDirection} role=\"button\" tabIndex=\"0\" className={`${CSS.direction} ${CSS[direction]}`}>\r\n          {`${direction === 'N' ? 'Up' : 'Down'}town`}\r\n        </span>\r\n      </div>\r\n      <div className={CSS.statusContainer}>\r\n        {loading || !schedule[direction] ? (\r\n          <>\r\n            <div className={CSS.floatLoader}>\r\n              <Spinner />\r\n            </div>\r\n            <div className={CSS.darken}>\r\n              <TrainStatus loading />\r\n              <TrainStatus loading />\r\n              <TrainStatus loading />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {schedule[direction].map((status, i) => (\r\n              <TrainStatus status={status} key={`${status.routeId}_${i}`} />\r\n            ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nTrainBlock.propTypes = {\r\n  stationObj: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])),\r\n  line: PropTypes.string,\r\n  networkError: PropTypes.func\r\n};\r\n\r\nTrainBlock.defaultProps = {\r\n  stationObj: {},\r\n  line: '',\r\n  networkError: () => {\r\n    throw new ReferenceError('networkError not passed to MainView');\r\n  }\r\n};\r\n\r\nexport default TrainBlock;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport WeatherBlock from '../blocks/WeatherBlock';\r\nimport TrainBlock from '../blocks/TrainBlock';\r\n\r\nimport CSS from '../../css/views/MainView.module.css';\r\n\r\n// Keep this stuff cached while I'm in settingsView.\r\nfunction MainView({ name, stationObj, line, gotoSettings, networkError }) {\r\n  const [greeting, setGreeting] = useState();\r\n\r\n  const calcGreeting = () => {\r\n    const currT = new Date().getHours();\r\n\r\n    if (currT > 5 && currT < 12) return 'Morning';\r\n    if (currT > 12 && currT < 18) return 'Afternoon';\r\n    if (currT > 18 || currT < 5) return 'Evening';\r\n    return 'Day';\r\n  };\r\n\r\n  useEffect(() => {\r\n    setGreeting(calcGreeting());\r\n  }, []);\r\n\r\n  return (\r\n    <section className={CSS.MainView}>\r\n      <h1 className={CSS.mainHeader}>\r\n        Good {greeting} {name}\r\n      </h1>\r\n      <div className={CSS.weatherContainer}>\r\n        <WeatherBlock lat={stationObj.stop_lat} lon={stationObj.stop_lon} networkError={networkError} />\r\n      </div>\r\n      <div className={CSS.trainContainer}>\r\n        <TrainBlock stationObj={stationObj} line={line} networkError={networkError} />\r\n      </div>\r\n      <div className={CSS.settingsLink}>\r\n        <span onClick={gotoSettings} role=\"button\" tabIndex=\"0\">\r\n          Settings\r\n        </span>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nMainView.propTypes = {\r\n  name: PropTypes.string,\r\n  stationObj: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])),\r\n  line: PropTypes.string,\r\n  gotoSettings: PropTypes.func,\r\n  networkError: PropTypes.func\r\n};\r\n\r\nMainView.defaultProps = {\r\n  name: '',\r\n  stationObj: {},\r\n  line: '',\r\n  gotoSettings: () => {\r\n    throw new ReferenceError('gotoSettings not passed to MainView');\r\n  },\r\n  networkError: () => {\r\n    throw new ReferenceError('networkError not passed to MainView');\r\n  }\r\n};\r\n\r\nexport default MainView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CSS from '../../css/views/SettingsView.module.css';\r\nimport Typeahead from '../reusables/Typeahead';\r\nimport Input from '../reusables/Input';\r\nimport Option from '../reusables/Option';\r\nimport Button from '../reusables/Button';\r\nimport lineMap from '../data/lineMap';\r\nimport mailIcon from '../../assets/images/emailIcon.svg';\r\nimport cloudIcon from '../../assets/images/cloudIcon.svg';\r\n\r\n// SettingsView is just a re-branded WelcomeView, check that component for comments.\r\n// BUG: Option isn't defaulting to the currently selected line.\r\nfunction SettingsView({ initData, networkError, saveChanges }) {\r\n  const [name, setName] = useState(initData.name);\r\n  const [stationObj, setStationObj] = useState(initData.stationObj);\r\n  const [lines, setLines] = useState([]);\r\n  const [line, setLine] = useState(initData.line);\r\n\r\n  const [errorObj, setErrorObj] = useState({\r\n    name: '',\r\n    stationObj: '',\r\n    line: ''\r\n  });\r\n\r\n  const submit = () => {\r\n    const errors = {};\r\n\r\n    if (!Object.keys(stationObj).length) errors.stationObj = 'Missing station name';\r\n    if (name.length > 16) errors.name = 'First name too long';\r\n    if (!name.trim()) errors.name = 'Missing name';\r\n    if (!line) errors.line = 'Missing line';\r\n\r\n    setErrorObj(errors);\r\n    if (!Object.keys(errors).length) {\r\n      saveChanges(name, stationObj, line);\r\n    }\r\n  };\r\n\r\n  const getData = (stationName, setOptions, enableOptionsView) => {\r\n    fetch(`${process.env.REACT_APP_API_URL}/search/stops/?query=${stationName}`)\r\n      .then(data => data.json())\r\n      .then(json => {\r\n        if (json.error) throw new Error(json.error);\r\n        setOptions(json);\r\n        enableOptionsView(true);\r\n      })\r\n      .catch(err => {\r\n        if (err.message === 'Rate Limit Reached') {\r\n          networkError('Rate Limit Reached', false);\r\n        } else networkError('/searchStops req failed', true, getData, stationName, setOptions, enableOptionsView);\r\n      });\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      setLines(stationObj.stop_id);\r\n      if (stationObj.stop_id) {\r\n        const ind = stationObj.stop_id.indexOf(line);\r\n        if (ind !== -1) setLine(stationObj.stop_id[ind]);\r\n      }\r\n    },\r\n    [stationObj]\r\n  );\r\n\r\n  return (\r\n    <section className={CSS.SettingsView}>\r\n      <h1 className={CSS.mainHeader}>Settings</h1>\r\n      <div className={CSS.inputsContainer}>\r\n        <Typeahead\r\n          error={errorObj.stationObj ? errorObj.stationObj : ''}\r\n          getData={getData}\r\n          stationObj={stationObj}\r\n          setStationObj={setStationObj}\r\n        />\r\n        <Input\r\n          onChange={e => setName(e.target.value)}\r\n          value={name}\r\n          maxLength=\"16\"\r\n          placeholder=\"Name...\"\r\n          alt=\"name\"\r\n          label=\"First Name\"\r\n          error={errorObj.name ? errorObj.name : ''}\r\n          fluid={1}\r\n        />\r\n        <Option\r\n          data={lines}\r\n          selected={lines.indexOf(line)}\r\n          onChange={e => setLine(lines[e.target.value])}\r\n          error={errorObj.line ? errorObj.line : ''}\r\n          lineMap={lineMap}\r\n          label=\"Subway Line\"\r\n          alt=\"Subway Line\"\r\n        />\r\n      </div>\r\n\r\n      <div className={CSS.btnContainer}>\r\n        <a href=\"mailto:noahryamamoto@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <Button icon={mailIcon}>Feedback</Button>\r\n        </a>\r\n        <a href=\"https://darksky.net/poweredby/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <Button icon={cloudIcon}>Powered by Dark Sky</Button>\r\n        </a>\r\n      </div>\r\n      <div className={CSS.saveContainer}>\r\n        <Button onClick={submit}>Save Changes</Button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nSettingsView.propTypes = {\r\n  initData: PropTypes.objectOf(\r\n    PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]))\r\n    ])\r\n  ),\r\n  networkError: PropTypes.func,\r\n  saveChanges: PropTypes.func\r\n};\r\n\r\nSettingsView.defaultProps = {\r\n  initData: {\r\n    name: '',\r\n    line: '',\r\n    stationObj: {}\r\n  },\r\n  networkError: () => {\r\n    throw new ReferenceError('networkError not passed to MainView');\r\n  },\r\n  saveChanges: () => {\r\n    throw new ReferenceError('saveChanges not passed to MainView');\r\n  }\r\n};\r\n\r\nexport default SettingsView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SunAndClouds from '../assets/images/sunny-day.png';\r\nimport CSS from '../css/App.module.css';\r\n\r\nimport NetworkDialogue from './reusables/NetworkDialogue';\r\nimport WelcomeView from './views/WelcomeView';\r\nimport MainView from './views/MainView';\r\nimport SettingsView from './views/SettingsView';\r\n\r\n// This function will run on every single render. But hooks is smart enough to not rewrite existing state !\r\nfunction App() {\r\n  const [stationObj, setStationObj] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [line, setLine] = useState('');\r\n  const [view, setView] = useState('');\r\n\r\n  const [networkIssue, setNetworkIssue] = useState('');\r\n\r\n  const networkRetry = (tries, cb, ...params) => {\r\n    if (tries === 0) {\r\n      setNetworkIssue('Tries exceeded, try reloading?');\r\n      return false;\r\n    }\r\n\r\n    return new Promise(res => {\r\n      console.log(`Retrying network, attempt: ${tries}`);\r\n      if (navigator.onLine) {\r\n        fetch(`${process.env.REACT_APP_API_URL}/api/stopInfo/115`)\r\n          .then(({ status }) => {\r\n            if (status !== 200) throw new Error('Server Error');\r\n            // Otherwise if we're back online invoke the cb and undo errors.\r\n            if (cb) cb(...params);\r\n            res(status);\r\n            setNetworkIssue('');\r\n          })\r\n          .catch(() => {\r\n            if (networkIssue !== 'Server Down') setNetworkIssue('Server Down');\r\n            // If sill offline, wait 10 seconds and try again.\r\n            setTimeout(() => networkRetry(tries - 1, cb, ...params), 10000);\r\n          });\r\n      } else {\r\n        if (!networkIssue) setNetworkIssue('Internet down');\r\n        setTimeout(() => networkRetry(tries - 1, cb, ...params), 10000);\r\n      }\r\n    });\r\n  };\r\n\r\n  // When invoked, check if the user is online. If they are, check if the server is online.\r\n  const networkError = (msg, retry, cb, ...params) => {\r\n    if (!retry || networkIssue) {\r\n      // Using this for rate limit, but it's usable for other things.\r\n      setNetworkIssue(msg);\r\n    } else if (retry) {\r\n      // If requested to retry, send to async network retry system.\r\n      networkRetry(5, cb, ...params);\r\n    }\r\n  };\r\n\r\n  const saveChanges = (newName, newStationObj, newLine) => {\r\n    // Submit the state to the localStorage.\r\n    if (!newName || !newStationObj || !newLine) {\r\n      throw new Error(\"saveChanges wasn't given proper variables\");\r\n    }\r\n\r\n    localStorage.setItem('stationObj', JSON.stringify(newStationObj));\r\n    localStorage.setItem('name', newName);\r\n    localStorage.setItem('line', newLine);\r\n    setStationObj(newStationObj);\r\n    setName(newName);\r\n    setLine(newLine);\r\n    setView('main');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // On first load check if we have data. If we don't have any data, show welcome view. If we do, show mainView.\r\n    const checkStorage = key => localStorage.getItem(key) || '';\r\n    const newName = checkStorage('name');\r\n    const newLine = checkStorage('line');\r\n    const newStationObj = JSON.parse(checkStorage('stationObj') || '{}');\r\n    setName(newName);\r\n    setLine(newLine);\r\n    setStationObj(newStationObj);\r\n    if (newName && newStationObj && newLine) {\r\n      setView('main');\r\n    } else setView('welcome');\r\n  }, []);\r\n\r\n  // General parent stylings setting the header img, fonts, bg color.\r\n  return (\r\n    <div className={CSS.App}>\r\n      <header className={CSS.imgContainer}>\r\n        <img src={SunAndClouds} className={CSS.headerImg} alt=\"Sun And Clouds\" />\r\n      </header>\r\n      <div className={CSS.content}>\r\n        <NetworkDialogue message={networkIssue} />\r\n        {view === 'welcome' && <WelcomeView saveChanges={saveChanges} networkError={networkError} />}\r\n        {view === 'main' && (\r\n          <MainView\r\n            name={name}\r\n            stationObj={stationObj}\r\n            line={line}\r\n            networkError={networkError}\r\n            gotoSettings={() => setView('settings')}\r\n          />\r\n        )}\r\n        {view === 'settings' && (\r\n          <SettingsView\r\n            initData={{\r\n              name,\r\n              stationObj,\r\n              line\r\n            }}\r\n            networkError={networkError}\r\n            saveChanges={saveChanges}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}